#!/bin/bash

tail -n+6 "$0" | less
exit $?

FGT

  The extra-stupid version control system based on git.

  Lets you checkout a remote git repo without wasting that local space on a
  whole copy of all history, and commit directly to a remote branch without
  passing "go" (or any other verb, for that matter).

  Requires a git repo as the remote.

  Will waste a lot of bandwidth, because it is very stupid.


USAGE

  The basic principle is similar to most version control systems - there's a
  main comment "fgt" that accepts various common subcommands.
  Beware that most tools don't really validate input, so get it right or make
  backups.


SUBCOMMANDS

  fgt help

    Show this help text.

  fgt checkout [BRANCH [REPO [TARGET]]]

    Change branch, clone a new repo or update the current branch.

    BRANCH
      The remote branch to check out
    REPO
      The remote repository to check out, the default value is the last repo
      cloned with fgt in the current directory.
    TARGET
      The directory to put the checked-out files in. The default valus is cwd.
      Any existing files not recognized may be deleted.

  fgt clone REPO [TARGET]

    Create a new checkout. Like git clone, if target is not given it will be
    derived from the basename of REPO.

  fgt commit BRANCH [REPO]

    Collect the current working directory state and push it to BRANCH as a new
    commit. BRANCH must be in the refs/heads/* namespace and does not include
    the refs/heads/ part.
